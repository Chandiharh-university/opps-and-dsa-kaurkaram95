#include <iostream>
#define SIZE 5  // Define the size of the stack

class Stack {
private:
    int items[SIZE], top;

public:
    // Constructor to initialize the stack
    Stack() {
        top = -1;
    }

    // Function to check if the stack is full
    bool isFull() {
        return top == SIZE - 1;
    }

    // Function to check if the stack is empty
    bool isEmpty() {
        return top == -1;
    }

    // Function to push an element onto the stack
    void push(int element) {
        if (isFull()) {
            std::cout << "Stack is full. Cannot push " << element << ".\n";
        } else {
            items[++top] = element;
            std::cout << "Pushed: " << element << "\n";
        }
    }

    // Function to pop an element from the stack
    void pop() {
        if (isEmpty()) {
            std::cout << "Stack is empty. Nothing to pop.\n";
        } else {
            std::cout << "Popped: " << items[top--] << "\n";
        }
    }

    // Function to display the stack
    void display() {
        if (isEmpty()) {
            std::cout << "Stack is empty.\n";
        } else {
            std::cout << "Stack elements: ";
            for (int i = top; i >= 0; i--) {
                std::cout << items[i] << " ";
            }
            std::cout << "\n";
        }
    }
};

int main() {
    Stack stack;
    int choice, value;

    do {
        std::cout << "\n--- Stack Menu ---\n";
        std::cout << "1. Push\n";
        std::cout << "2. Pop\n";
        std::cout << "3. Display\n";
        std::cout << "4. Exit\n";
        std::cout << "Enter your choice: ";
        std::cin >> choice;

        switch (choice) {
            case 1:
                std::cout << "Enter the value to push: ";
                std::cin >> value;
                stack.push(value);
                break;
            case 2:
                stack.pop();
                break;
            case 3:
                stack.display();
                break;
            case 4:
                std::cout << "Exiting program.\n";
                break;
            default:
                std::cout << "Invalid choice! Please try again.\n";
        }
    } while (choice != 4);

    return 0;
}
